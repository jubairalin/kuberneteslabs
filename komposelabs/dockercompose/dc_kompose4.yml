apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o dc_kompose4.yml
      kompose.version: 1.7.0 (HEAD)
    creationTimestamp: null
    labels:
      io.kompose.service: appservers
    name: appservers
  spec:
    ports:
    - name: "8082"
      port: 8082
      targetPort: 8080
    selector:
      io.kompose.service: appservers
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o dc_kompose4.yml
      kompose.version: 1.7.0 (HEAD)
    creationTimestamp: null
    labels:
      io.kompose.service: webservers
    name: webservers
  spec:
    ports:
    - name: "9090"
      port: 9090
      targetPort: 80
    selector:
      io.kompose.service: webservers
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o dc_kompose4.yml
      kompose.version: 1.7.0 (HEAD)
    creationTimestamp: null
    labels:
      io.kompose.service: appservers
    name: appservers
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: appservers
      spec:
        containers:
        - image: bitnami/tomcat
          name: appservers
          ports:
          - containerPort: 8080
          resources: {}
          volumeMounts:
          - mountPath: /usr/local/tomcat/webapps/supermarket.war
            name: appservers-claim0
        restartPolicy: Always
        volumes:
        - name: appservers-claim0
          persistentVolumeClaim:
            claimName: appservers-claim0
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: appservers-claim0
    name: appservers-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml -o dc_kompose4.yml
      kompose.version: 1.7.0 (HEAD)
    creationTimestamp: null
    labels:
      io.kompose.service: webservers
    name: webservers
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: webservers
      spec:
        containers:
        - image: nginx
          name: webservers
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
  status: {}
kind: List
metadata: {}

